// <auto-generated />
using System;
using Seedium.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Seedium.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlogPostCategory", b =>
                {
                    b.Property<Guid>("BlogPostsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BlogPostsId", "CategoriesId");

                    b.HasIndex("CategoriesId");

                    b.ToTable("BlogPostCategory");
                });

            modelBuilder.Entity("Seedium.Models.Domain.BlogImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlogImages");
                });

            modelBuilder.Entity("Seedium.Models.Domain.BlogPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeaturedImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("Seedium.Models.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("29316fd9-ee3f-4473-8ca2-e3acf9ad8623"),
                            Name = "ASP.NET Core",
                            Slug = "dotnet-blogs"
                        },
                        new
                        {
                            Id = new Guid("34680195-b466-4bec-b015-e6c17fe4f212"),
                            Name = "C#",
                            Slug = "csharp-blogs"
                        },
                        new
                        {
                            Id = new Guid("78c279ef-1705-4676-9d37-c31774b68e5b"),
                            Name = "Angular",
                            Slug = "angular-blogs"
                        },
                        new
                        {
                            Id = new Guid("a9efd598-49ac-4fe7-814c-aa7ff2947ee1"),
                            Name = "HTML",
                            Slug = "html-blogs"
                        },
                        new
                        {
                            Id = new Guid("ada50148-57e7-4702-8b03-7f8f0622b38e"),
                            Name = "CSS",
                            Slug = "css-blogs"
                        },
                        new
                        {
                            Id = new Guid("09f35d85-9e8e-4e44-ae91-c276743e2a08"),
                            Name = "JavaScript",
                            Slug = "js-blogs"
                        },
                        new
                        {
                            Id = new Guid("37384065-f8dc-4e11-9476-727e38c84773"),
                            Name = "TypeScript",
                            Slug = "ts-blogs"
                        },
                        new
                        {
                            Id = new Guid("a0d6745d-b68d-46f5-a03a-6db83a4e7750"),
                            Name = "Node",
                            Slug = "node-blogs"
                        },
                        new
                        {
                            Id = new Guid("0703b36b-fd1d-4ec5-99af-540278e3727b"),
                            Name = "NestJS",
                            Slug = "nest-blogs"
                        },
                        new
                        {
                            Id = new Guid("675384ca-b046-4de9-843f-3b81d2d89801"),
                            Name = "Python",
                            Slug = "python-blogs"
                        },
                        new
                        {
                            Id = new Guid("4e23b927-647c-4114-81c3-63d39bbb890a"),
                            Name = "Django",
                            Slug = "django-blogs"
                        },
                        new
                        {
                            Id = new Guid("252a07cb-d1df-4029-83fe-a7c35a0d9c47"),
                            Name = "React",
                            Slug = "react-blogs"
                        },
                        new
                        {
                            Id = new Guid("e956e7f0-2518-41a5-b8e1-4ec91290f365"),
                            Name = "Java",
                            Slug = "java-blogs"
                        },
                        new
                        {
                            Id = new Guid("2a94d6b9-8755-4c1f-beb9-44391e84e229"),
                            Name = "Artificial Intelligence",
                            Slug = "ai-blogs"
                        },
                        new
                        {
                            Id = new Guid("cc2bf2f6-41d9-4883-a42a-076a02bc1be8"),
                            Name = ".NET Framework",
                            Slug = "dotnet-framework-blogs"
                        },
                        new
                        {
                            Id = new Guid("7ee044bd-7959-45e9-b1f5-5becebec2270"),
                            Name = "HTTP",
                            Slug = "http-blogs"
                        });
                });

            modelBuilder.Entity("BlogPostCategory", b =>
                {
                    b.HasOne("Seedium.Models.Domain.BlogPost", null)
                        .WithMany()
                        .HasForeignKey("BlogPostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Seedium.Models.Domain.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
